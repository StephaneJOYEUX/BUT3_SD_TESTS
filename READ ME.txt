A faire pour la suite du projet :

	- Rajouter dans le main la possibilité de choisir entre 3 mode de jeu différents : création du classe ChoixModeJeu (similaire à ChoixStrategie)
		- Normal => grille de 10x10 & 5 bateaux
		- Blitz => grille de 5x5 ? & 3 bateaux 
		- Personnalisé => taille de la grille au choix du joueur et nb de bateaux aussi.
	- Enregistrer les différents mode de jeu dans un fichier csv de sauvegarde / une bd ? (utiliser pandas => cf classe ChoixStrategie)
	
	
	
	
Etapes :
	1. Finir les tests des classes existantes.
	2. Implémenter la nouvelle fonctionnalité : les modes de jeu. Répercuter les changements aux autres classes et réaliser les tests associés.
		a. coder la classe CreationModeJeu => demander les inputs utilisateurs, verifier les criteres de validité des modes de jeux.
		b. demander à l'utilisateur s'il souhaite enregistrer ce mode de jeu.
	
	


Etat du code actuel :
	- Navire : X
	- TestNavire : X
	- Grille : X
	- TestGrille : X
	- Strategie : x
	- TestStrategie : x 
	- ModeJeu : Implémenter la fonction "verifier_validiter_navires" selon des critères à définir
	- TestModeJeu : Tester les fonctions qui dépendent de l'implémentation de la méthode de classe "verifier_validiter_navires"
	- ChoixModeJeu : ? (reste encore des erreurs dû au code encore manquant pour la creation d'un mode de jeu)
	- TestChoixModeJeu : ?
	- ChoixStrategie : X
	- TestChoixStrategie : Tester cas critiques pour les fonction de lecture/ecriture dans le fichier de sauvegarde + tester le main ? *
	- CreationStrategie : X
	- TestCreationStrategie : tester methodes de classe => comment tester des methodes avec des inputs ? *
	- BatailleNavale : faire le point pour verifier si il faut modifier du code - depend de l'implementation des classe ModeJeu & associées.
	- TestBtailleNavale : tout tester
	
	
	
Pour creer un mode_jeu il faut :
	- la taille de la grille (input user)
	- le nombre de navires (input user)
	- les caractéristiques de chacun des navires (nom, taille, et symbole ? ou symbole deduit du nom ?) (input user)



19/01/25

 - pour le code de CreationModeJeu, il faut bien verifier les histoire de validiter d'un mode de jeu (voir avec le prof ??!!!)
 - Autre question pour l'enseignant : Comment tester des classes dont l'objet est de récupérer des inputs utilisateur afin d'appeler les autres classes ? 
	=> Comment tester les classes d'encapsulation ?
	
 - Est-ce que la classe Test, regroupant toutes les autres classes de tests est une bonne idée ? Si oui, dois-je annexer son execution à l'execution du main ?
 
 - En ce qui concerne les tests des fonction de lecture et d'écriture dans les fichiers csv, est-ce vraiment utile ici ? 
		dans le sens où la fonction fait appel à une méthode pandas unique permettant de réaliser la lecture/l'ecriture.
		Cela reviendrait a tester la fonction pandas elle-même (qui doit avoir son propre module de test) et cela n'aurait pas de sens...
		
	